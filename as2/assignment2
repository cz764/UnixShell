## Assignment 2
## Chen Zhu, cz764, N12166205

###############################################################
## Question 1 #################################################
###############################################################

# sed -n '/table/,/table/p' < senate_polls.html | sed /tr/d | sed /small-state-header/d | sed /^$/d | sed s/\&nbsp\;/\ / | sed 's/<[^>]\+>/ /g' | sed -E '/^ *$/d; s/^[[:space:]]*//; s/[[:space:]]*$//' | sed 's/%$//' | sed 's/\*$//'
/table/,/\/table/!d
/table/d
/tr>/d
/small-state-header/d
/^$/d
s/&nbsp;/ /g
s/<[^>]\+>//g
s/^ *//g
s/ *$//g
s/\([0-9]\)%/\1/g
s/\*$//g

###############################################################
## Question 2 #################################################
###############################################################
awk '
BEGIN {
      ORS="";
      OFS="";
}
{
      if(NR%10 != 0) {print $0,","}
      else { print $0,"\n"}
}
' > result.csv

###############################################################
## Question 3 #################################################
###############################################################

cat result.csv | grep "[fF]ox [nN]ews" | wc -l

###############################################################
## Question 4 #################################################
###############################################################

cat result.csv | grep -E 'SurveyUSA|Rasmussen' | wc -l

###############################################################
## Question 5 #################################################
###############################################################

cat result.csv | grep -Ev 'Fox News' | wc -l

###############################################################
## Question 6 #################################################
###############################################################

cat result.csv | grep -E "([[:alpha:]]{3} [0-9]{2}),\1"

###############################################################
## Question 7 #################################################
###############################################################

cat result.csv | cut -d, -f4,5 | grep -E "(100|[6-9][0-9]|[5][1-9])" | cut -d, -f1 | uniq | sort

###############################################################
## Question 8 #################################################
###############################################################

cat result.csv | cut -d, -f2 | uniq | grep -E ^"([[:alpha:]])([[:alpha:]])* \1"

###############################################################
## Question 9 #################################################
###############################################################

awk 'function abs(n){
        return n > 0 ? n : -n
}
BEGIN{
        FS=",";
        max = 0;
}
$10 != "Unopposed" {
        if(max < abs($3 - $5)) { max = abs($3 - $5); name = $10;}
}
END{
        print name
}
' result.csv

###############################################################
## Question 10 ################################################
###############################################################
awk '
BEGIN {FS=","; max = 0}
{ states[$1]++; }
END {
for (var in states) {
        if (max < states[var]) { name = var; max = states[var]}
}
print name;
}
' result.csv

###############################################################
## Question 11 ################################################
###############################################################
awk '
BEGIN {
FS=",";
}
{
orgs[$10]++;
}
END{
for (var in orgs)
        print var, orgs[var];
}
' result.csv

###############################################################
## Question 12 ################################################
###############################################################
awk '
BEGIN {
FS = ",";
}
{
states[$1]++;
}
END {
for (var in states) {
        count++;
}
print NR/count;
}
' result.csv

###############################################################
## Question 13 ################################################
###############################################################
awk '
BEGIN {
        FS = ",";
}
{
        orgs[$10]++;
        score[$10] += $3;
}
END {
        max = 0;
        for (var in orgs) {
                average = score[var]/orgs[var];
                if (max < average){
                        result = var;
                        max = average;
                }
        }
        print result;
}
' result.csv
